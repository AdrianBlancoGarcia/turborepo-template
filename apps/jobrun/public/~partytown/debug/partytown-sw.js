const a=new Map,b=(a,b)=>({$msgId$:a.$msgId$,$error$:b}),c=c=>new Promise(async e=>{var f;let g=await c.clone().json(),h=await (f=g,new Promise(async c=>{let d=await self.clients.matchAll(),e=[...d].sort((a,b)=>a.url>b.url?-1:a.url<b.url?1:0)[0];if(e){let g=12e4,h=[c,setTimeout(()=>{a.delete(f.$msgId$),c(b(f,"Timeout"))},g)];a.set(f.$msgId$,h),e.postMessage(f)}else c(b(f,"NoParty"))}));e(d(JSON.stringify(h),"application/json"))}),d=(a,b)=>new Response(a,{headers:{"content-type":b||"text/html","Cache-Control":"no-store"}});self.oninstall=()=>self.skipWaiting(),self.onactivate=()=>self.clients.claim(),self.onmessage=b=>{let c=b.data,d=a.get(c.$msgId$);d&&(a.delete(c.$msgId$),clearTimeout(d[1]),d[0](c))},self.onfetch=a=>{let b=a.request,e=new URL(b.url),f=e.pathname;f.endsWith("sw.html")?a.respondWith(d('<!DOCTYPE html><html><head><meta charset="utf-8"><script src="./partytown-sandbox-sw.js?v=0.6.4"></script></head></html>')):f.endsWith("proxytown")&&a.respondWith(c(b))}