// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fxuAGcsah199rVCjPzGTfY
// Component: hZSDCCaX6TJ
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: uEAoMM34trbb9e/component
import LinkOm from "../../LinkOm"; // plasmic-import: 1gULMJc0uv/component
import Button from "../../Button"; // plasmic-import: xxIo1oxPKF17E6/component
import AccordionSection from "../../AccordionSection"; // plasmic-import: wW_0-pIrct/component
import TestimonialsTexts from "../../TestimonialsTexts"; // plasmic-import: nroB0osN4U/component
import ProfileImage from "../../ProfileImage"; // plasmic-import: wKWKuNBIBF/component
import ModuleItemCard from "../../ModuleItemCard"; // plasmic-import: qE3YWQny7R/component
import CourseLandingFaq from "../../CourseLandingFaq"; // plasmic-import: Ye9aVWVYDq/component
import FooterSection from "../../FooterSection"; // plasmic-import: bpZukpM1tJlDbv/component

import { useScreenVariants as useScreenVariantsngzoyd6GPz8Rig } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Ngzoyd6gPZ8rig/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_open_marketers.module.css"; // plasmic-import: fxuAGcsah199rVCjPzGTfY/projectcss
import sty from "./PlasmicLandingCurso.module.css"; // plasmic-import: hZSDCCaX6TJ/css

import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: 1LQtfIq6-_/icon
import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: bSsTEcq38cO9yG/icon
import IntersectIcon from "./icons/PlasmicIcon__Intersect"; // plasmic-import: aoeyX7jS9Z/icon
import Ellipse30Icon from "./icons/PlasmicIcon__Ellipse30"; // plasmic-import: GAz4Dq79b-/icon

export type PlasmicLandingCurso__VariantMembers = {};

export type PlasmicLandingCurso__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingCurso__VariantsArgs;
export const PlasmicLandingCurso__VariantProps = new Array<VariantPropType>();

export type PlasmicLandingCurso__ArgsType = {
  navbar?: React.ReactNode;
  moduleIcon?: React.ReactNode;
  accordionContainer?: React.ReactNode;
  courseList?: React.ReactNode;
  leftArrow?: React.ReactNode;
  rightArrow?: React.ReactNode;
  testimonialsText?: React.ReactNode;
  testimonialUsers?: React.ReactNode;
  breadCrumb?: React.ReactNode;
  courseDuration?: React.ReactNode;
  heroCourseTitle?: React.ReactNode;
  faq?: React.ReactNode;
};

type ArgPropType = keyof PlasmicLandingCurso__ArgsType;
export const PlasmicLandingCurso__ArgProps = new Array<ArgPropType>(
  "navbar",
  "moduleIcon",
  "accordionContainer",
  "courseList",
  "leftArrow",
  "rightArrow",
  "testimonialsText",
  "testimonialUsers",
  "breadCrumb",
  "courseDuration",
  "heroCourseTitle",
  "faq"
);

export type PlasmicLandingCurso__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  content?: p.Flex<"div">;
  header?: p.Flex<"div">;
  breadCrumb?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  heroFeature1?: p.Flex<"div">;
  heroFeature2?: p.Flex<"div">;
  heroFeature3?: p.Flex<"div">;
  content5?: p.Flex<"div">;
  rightColumn?: p.Flex<"div">;
  rectangle699?: p.Flex<"div">;
  courseIcon?: p.Flex<"div">;
  omFeatures?: p.Flex<"div">;
  heading2?: p.Flex<"div">;
  sectionTitle5?: p.Flex<"h2">;
  description4?: p.Flex<"p">;
  content2?: p.Flex<"div">;
  content3?: p.Flex<"div">;
  content4?: p.Flex<"div">;
  courseSection?: p.Flex<"div">;
  omProcess?: p.Flex<"div">;
  heading?: p.Flex<"div">;
  sectionTitle4?: p.Flex<"h2">;
  omEspecial?: p.Flex<"div">;
  textContent01?: p.Flex<"div">;
  sectionTitle2?: p.Flex<"h5">;
  description2?: p.Flex<"p">;
  omEspecial2?: p.Flex<"div">;
  frame1000002027?: p.Flex<"div">;
  sectionTitle3?: p.Flex<"h5">;
  description3?: p.Flex<"p">;
  omEspecial3?: p.Flex<"div">;
  frame1000002028?: p.Flex<"div">;
  sectionTitle6?: p.Flex<"div">;
  description5?: p.Flex<"p">;
  testimonial?: p.Flex<"div">;
  leftColumTestimonial?: p.Flex<"div">;
  h4?: p.Flex<"h4">;
  rightColumnTestimonial?: p.Flex<"div">;
  modulesSection?: p.Flex<"div">;
  sectionContainer?: p.Flex<"div">;
  sectionHeading?: p.Flex<"div">;
  sectionTitle?: p.Flex<"h3">;
  description?: p.Flex<"p">;
  faq?: p.Flex<"div">;
  faqContent?: p.Flex<"div">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultLandingCursoProps {}

function PlasmicLandingCurso__RenderFunc(props: {
  variants: PlasmicLandingCurso__VariantsArgs;
  args: PlasmicLandingCurso__ArgsType;
  overrides: PlasmicLandingCurso__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsngzoyd6GPz8Rig()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">
          {"Curso intensivo de Marketing Digital y trabajo ¡GRATIS!"}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={"Curso intensivo de Marketing Digital y trabajo ¡GRATIS!"}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Curso intensivo de Marketing Digital y trabajo ¡GRATIS!"}
        />
        <meta
          key="description"
          name="description"
          content={
            "Aprende +10 especialidades del Marketing digital y consigue trabajo de forma gratuita."
          }
        />
        <meta
          key="og:description"
          property="og:description"
          content={
            "Aprende +10 especialidades del Marketing digital y consigue trabajo de forma gratuita."
          }
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={
            "Aprende +10 especialidades del Marketing digital y consigue trabajo de forma gratuita."
          }
        />
        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/37ae570b068686f525b61b777f5b8c6b.png"
          }
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/37ae570b068686f525b61b777f5b8c6b.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {p.renderPlasmicSlot({
            defaultContents: (
              <Navbar
                className={classNames("__wab_instance", sty.navbar__wDnNx)}
              />
            ),

            value: args.navbar
          })}

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vdWxc)}
            >
              {(
                hasVariant(globalVariants, "screen", "laptopL") ? true : true
              ) ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content"}
                  data-plasmic-override={overrides.content}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? true
                      : hasVariant(globalVariants, "screen", "laptopL")
                      ? true
                      : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"header"}
                      data-plasmic-override={overrides.header}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.header)}
                    >
                      <div
                        data-plasmic-name={"breadCrumb"}
                        data-plasmic-override={overrides.breadCrumb}
                        className={classNames(projectcss.all, sty.breadCrumb)}
                      >
                        {p.renderPlasmicSlot({
                          defaultContents: null,
                          value: args.breadCrumb,
                          className: classNames(sty.slotTargetBreadCrumb)
                        })}
                      </div>

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <h1
                          data-plasmic-name={"h1"}
                          data-plasmic-override={overrides.h1}
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            sty.h1
                          )}
                        >
                          {p.renderPlasmicSlot({
                            defaultContents:
                              "Curso gratis de Neuromarketing aplicado a producto y marketing digital",
                            value: args.heroCourseTitle,
                            className: classNames(sty.slotTargetHeroCourseTitle)
                          })}
                        </h1>
                      ) : null}

                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__lQzRk
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "laptopL")
                          ? "Fórmate a tu ritmo con el primer programa intensivo de marketing digital gratuito que te conecta con las necesidades de las empresas y te ofrece posibilidades laborales."
                          : "El primer programa intensivo de marketing digital gratuito y \nque te conecta con las necesidades de las empresas y te \nofrece posibilidades laborales."}
                      </p>
                    </p.Stack>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rNmO)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"heroFeature1"}
                        data-plasmic-override={overrides.heroFeature1}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.heroFeature1)}
                      >
                        <p.PlasmicImg
                          alt={"Tiempo" as const}
                          className={classNames(sty.img__tylfj)}
                          displayHeight={"40px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"40px" as const}
                          loader={"plasmic"}
                          loading={"lazy" as const}
                          src={{
                            src: "https://site-assets.plasmic.app/6a6e2b0deece0eb80302bf9ba10089b7.svg",
                            fullWidth: 40,
                            fullHeight: 40,
                            aspectRatio: 1
                          }}
                        />

                        {p.renderPlasmicSlot({
                          defaultContents: "14H",
                          value: args.courseDuration,
                          className: classNames(sty.slotTargetCourseDuration)
                        })}
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"heroFeature2"}
                      data-plasmic-override={overrides.heroFeature2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.heroFeature2)}
                    >
                      <p.PlasmicImg
                        alt={"Localización" as const}
                        className={classNames(sty.img___1IkDa)}
                        displayHeight={"40px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"40px" as const}
                        loader={"plasmic"}
                        loading={"lazy" as const}
                        src={{
                          src: "https://site-assets.plasmic.app/192690490783a29700b6bac16a6822e1.svg",
                          fullWidth: 40,
                          fullHeight: 40,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fdCg4
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "A tu ritmo"
                          : "A tu ritmo"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"heroFeature3"}
                      data-plasmic-override={overrides.heroFeature3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.heroFeature3)}
                    >
                      <p.PlasmicImg
                        alt={"Gratis" as const}
                        className={classNames(sty.img__mIdH7)}
                        displayHeight={"40px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"40px" as const}
                        loader={"plasmic"}
                        loading={"lazy" as const}
                        src={{
                          src: "https://site-assets.plasmic.app/01a8537bcf3358759589eea8a5c310c7.svg",
                          fullWidth: 40,
                          fullHeight: 40,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rpnsX
                        )}
                      >
                        {"Gratis"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "laptopL") ? true : true
              ) ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content5"}
                  data-plasmic-override={overrides.content5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content5)}
                >
                  <div
                    data-plasmic-name={"rightColumn"}
                    data-plasmic-override={overrides.rightColumn}
                    className={classNames(projectcss.all, sty.rightColumn)}
                  >
                    {true ? (
                      <div
                        data-plasmic-name={"rectangle699"}
                        data-plasmic-override={overrides.rectangle699}
                        className={classNames(projectcss.all, sty.rectangle699)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"courseIcon"}
                          data-plasmic-override={overrides.courseIcon}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.courseIcon)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nhpbg
                            )}
                          >
                            {p.renderPlasmicSlot({
                              defaultContents: (
                                <p.PlasmicImg
                                  alt={""}
                                  className={classNames(sty.img__rdLnD)}
                                  displayHeight={"100%" as const}
                                  displayMaxHeight={"none" as const}
                                  displayMaxWidth={"100%" as const}
                                  displayMinHeight={"0" as const}
                                  displayMinWidth={"0" as const}
                                  displayWidth={"100%" as const}
                                  loader={"plasmic"}
                                  loading={"lazy" as const}
                                  src={{
                                    src: "https://site-assets.plasmic.app/886441c6fe045df8bb83616b9dc83a7e.svg",
                                    fullWidth: 150,
                                    fullHeight: 150,
                                    aspectRatio: 1
                                  }}
                                />
                              ),

                              value: args.moduleIcon
                            })}
                          </div>
                        </p.Stack>
                      </div>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "tablet")
                        ? true
                        : hasVariant(globalVariants, "screen", "laptopL")
                        ? true
                        : true
                    ) ? (
                      <IntersectIcon
                        className={classNames(projectcss.all, sty.svg__jKrsd)}
                        role={"img"}
                      />
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <Ellipse30Icon
                        className={classNames(projectcss.all, sty.svg__q4JEb)}
                        role={"img"}
                      />
                    ) : null}
                  </div>
                </p.Stack>
              ) : null}
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"omFeatures"}
            data-plasmic-override={overrides.omFeatures}
            className={classNames(projectcss.all, sty.omFeatures)}
            id={"como-funciona" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cwnbo)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"heading2"}
                data-plasmic-override={overrides.heading2}
                hasGap={true}
                className={classNames(projectcss.all, sty.heading2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wB82Y)}
                  displayHeight={"10px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"69px" as const}
                  loader={"plasmic"}
                  loading={"lazy" as const}
                  src={{
                    src: "https://site-assets.plasmic.app/67d8117ddfd18c9a3beba320d705e50c.svg",
                    fullWidth: 69,
                    fullHeight: 10,
                    aspectRatio: 6.9
                  }}
                />

                <h2
                  data-plasmic-name={"sectionTitle5"}
                  data-plasmic-override={overrides.sectionTitle5}
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.sectionTitle5
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "¿Qué es OpenMarketers?"
                    : "¿Qué es OpenMarketers?"}
                </h2>

                <p
                  data-plasmic-name={"description4"}
                  data-plasmic-override={overrides.description4}
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.description4
                  )}
                >
                  {hasVariant(globalVariants, "screen", "tablet")
                    ? "OpenMarketers cuenta con una amplia oferta formativa que te permitirá formarte en las últimas tecnologías que el mercado laboral demanda."
                    : "OpenMarketers es un programa pionero en el que recibirás toda la formación que necesites \nhasta que encuentres un mejor empleo."}
                </p>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__dUfBd)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__y2GO9)}
                >
                  <p.PlasmicImg
                    alt={"Formación gratuita" as const}
                    className={classNames(sty.img__xd55B)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("70px" as const)
                        : ("89px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("70px" as const)
                        : ("89px" as const)
                    }
                    loader={"plasmic"}
                    loading={"lazy" as const}
                    src={{
                      src: "https://site-assets.plasmic.app/f794e8c39e0ea8c3e8d10ff4ee16407a.svg",
                      fullWidth: 89,
                      fullHeight: 89,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content2"}
                    data-plasmic-override={overrides.content2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wDrtu
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "laptopM")
                        ? "Formación 100% gratuita."
                        : "Formación 100%\ngratuita."}
                    </div>

                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__lG5E0
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "laptopL")
                        ? "Nuestras empresas asumen el coste de tu formación una vez te contraten."
                        : "Nuestras empresas asumen el coste \nde tu formación una vez te contraten."}
                    </p>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fJru2)}
                >
                  <p.PlasmicImg
                    alt={"Tutorización" as const}
                    className={classNames(sty.img__zfAHn)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("75px" as const)
                        : ("89px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("70px" as const)
                        : ("80px" as const)
                    }
                    loader={"plasmic"}
                    loading={"lazy" as const}
                    src={{
                      src: "https://site-assets.plasmic.app/e8a7b789fa417ff04b1db3b428f28581.svg",
                      fullWidth: 80,
                      fullHeight: 89,
                      aspectRatio: 0.898876
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content3"}
                    data-plasmic-override={overrides.content3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kGeW5
                      )}
                    >
                      {"Tutorización. "}
                    </div>

                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__dyDgu
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "laptopL") ? (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Dispondrás de la ayuda de profesionales "}
                          </span>
                          <React.Fragment>
                            {
                              "en todo momento para hacer de tu formación, una experiencia única."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        "Nuestras empresas asumen el coste \nde tu formación una vez te contraten."
                      )}
                    </p>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mfpVf)}
                >
                  <p.PlasmicImg
                    alt={"Oportunidades Laborales" as const}
                    className={classNames(sty.img__rMyxc)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("70px" as const)
                        : ("84px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("70px" as const)
                        : ("89px" as const)
                    }
                    loader={"plasmic"}
                    loading={"lazy" as const}
                    src={{
                      src: "https://site-assets.plasmic.app/8f6621287d1e3dd7d2dd25364c6b6291.svg",
                      fullWidth: 89,
                      fullHeight: 84,
                      aspectRatio: 1.059524
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content4"}
                    data-plasmic-override={overrides.content4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content4)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yCxa3
                      )}
                    >
                      {"Oportunidades laborales."}
                    </div>

                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__rAmEj
                      )}
                    >
                      {
                        "Te ofrecemos oportunidades ajustadas a tu experiencia y conocimientos."
                      }
                    </p>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </div>

          {(
            hasVariant(globalVariants, "screen", "mobileOnly")
              ? true
              : hasVariant(globalVariants, "screen", "tablet")
              ? true
              : true
          ) ? (
            <div
              data-plasmic-name={"courseSection"}
              data-plasmic-override={overrides.courseSection}
              className={classNames(projectcss.all, sty.courseSection)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <AccordionSection
                    className={classNames(
                      "__wab_instance",
                      sty.accordionSection__pdOr
                    )}
                    courseText={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oHnZm
                        )}
                      >
                        {"Descubre el mundo del Neuromarketing"}
                      </div>
                    }
                  />
                ),

                value: args.accordionContainer
              })}
            </div>
          ) : null}

          <p.Stack
            as={"div"}
            data-plasmic-name={"omProcess"}
            data-plasmic-override={overrides.omProcess}
            hasGap={true}
            className={classNames(projectcss.all, sty.omProcess)}
            id={"como-funciona" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__u6Sgh)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"heading"}
                data-plasmic-override={overrides.heading}
                hasGap={true}
                className={classNames(projectcss.all, sty.heading)}
              >
                <h2
                  data-plasmic-name={"sectionTitle4"}
                  data-plasmic-override={overrides.sectionTitle4}
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.sectionTitle4
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {"¿Qué hace a OpenMarketers "}
                    </React.Fragment>
                    {
                      <span
                        className={classNames(
                          projectcss.all,
                          projectcss.span,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.span__gc7Rb
                        )}
                      >
                        {"especial"}
                      </span>
                    }
                    <React.Fragment>{"?"}</React.Fragment>
                  </React.Fragment>
                </h2>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__ttuO4)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"omEspecial"}
                  data-plasmic-override={overrides.omEspecial}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.omEspecial)}
                >
                  <p.PlasmicImg
                    alt={"Plataforma propia" as const}
                    className={classNames(sty.img__ez0R4)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("150px" as const)
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? ("310px" as const)
                        : hasVariant(globalVariants, "screen", "laptopM")
                        ? ("350px" as const)
                        : ("246px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loader={"plasmic"}
                    loading={"lazy" as const}
                    src={{
                      src: "https://img.plasmic.app/img-optimizer/v1/img/f9d19e2d0eb16f9b9de38a924679fa9d.png",
                      fullWidth: 712,
                      fullHeight: 492
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"textContent01"}
                    data-plasmic-override={overrides.textContent01}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.textContent01)}
                  >
                    <h5
                      data-plasmic-name={"sectionTitle2"}
                      data-plasmic-override={overrides.sectionTitle2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.sectionTitle2
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "laptopL") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <span
                              className={classNames(
                                projectcss.all,
                                projectcss.span,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.span__muYd9
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "laptopL"
                              ) ? (
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "transparent" }}
                                  >
                                    {"Plataforma propia"}
                                  </span>
                                </React.Fragment>
                              ) : (
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "transparent" }}
                                  >
                                    {"Plataforma propia"}
                                  </span>
                                </React.Fragment>
                              )}
                            </span>
                          }
                          <React.Fragment>{" de formación"}</React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <span
                              className={classNames(
                                projectcss.all,
                                projectcss.span,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.span__muYd9
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "laptopL"
                              ) ? (
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "transparent" }}
                                  >
                                    {"Plataforma propia"}
                                  </span>
                                </React.Fragment>
                              ) : (
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "transparent" }}
                                  >
                                    {"Plataforma propia"}
                                  </span>
                                </React.Fragment>
                              )}
                            </span>
                          }
                          <React.Fragment>{" de formación"}</React.Fragment>
                        </React.Fragment>
                      )}
                    </h5>

                    <p
                      data-plasmic-name={"description2"}
                      data-plasmic-override={overrides.description2}
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.description2
                      )}
                    >
                      {"Disfruta de una experiencia de formación única."}
                    </p>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"omEspecial2"}
                  data-plasmic-override={overrides.omEspecial2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.omEspecial2)}
                >
                  <p.PlasmicImg
                    alt={"Fórmate en las últimas tendencias" as const}
                    className={classNames(sty.img__ewOg)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("150px" as const)
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? ("310px" as const)
                        : hasVariant(globalVariants, "screen", "laptopM")
                        ? ("350px" as const)
                        : ("246px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loader={"plasmic"}
                    loading={"lazy" as const}
                    src={{
                      src: "https://img.plasmic.app/img-optimizer/v1/img/31aa34fbef54f4a2a69b78bf63253085.png",
                      fullWidth: 712,
                      fullHeight: 492
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame1000002027"}
                    data-plasmic-override={overrides.frame1000002027}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000002027)}
                  >
                    <h5
                      data-plasmic-name={"sectionTitle3"}
                      data-plasmic-override={overrides.sectionTitle3}
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.sectionTitle3
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__iEpf
                            )}
                          >
                            {"Te formamos "}
                          </span>
                        }
                        <React.Fragment>
                          {"en las últimas tendencias"}
                        </React.Fragment>
                      </React.Fragment>
                    </h5>

                    <p
                      data-plasmic-name={"description3"}
                      data-plasmic-override={overrides.description3}
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.description3
                      )}
                    >
                      {
                        "Nuestro contenido se adapta a las demandas del mercado laboral"
                      }
                    </p>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"omEspecial3"}
                  data-plasmic-override={overrides.omEspecial3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.omEspecial3)}
                >
                  <p.PlasmicImg
                    alt={"Nos adaptamos a tí" as const}
                    className={classNames(sty.img__lTmWs)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("150px" as const)
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? ("310px" as const)
                        : hasVariant(globalVariants, "screen", "laptopM")
                        ? ("350px" as const)
                        : ("246px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loader={"plasmic"}
                    loading={"lazy" as const}
                    src={{
                      src: "https://img.plasmic.app/img-optimizer/v1/img/36d4ea521502a848480c0df5399ed783.png",
                      fullWidth: 712,
                      fullHeight: 492
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame1000002028"}
                    data-plasmic-override={overrides.frame1000002028}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000002028)}
                  >
                    <div
                      data-plasmic-name={"sectionTitle6"}
                      data-plasmic-override={overrides.sectionTitle6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.sectionTitle6
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__xtFtW
                            )}
                          >
                            {"Nos adaptamos"}
                          </span>
                        }
                        <React.Fragment>
                          {" a tu nivel de formación"}
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p
                      data-plasmic-name={"description5"}
                      data-plasmic-override={overrides.description5}
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.description5
                      )}
                    >
                      {
                        "Tengas la experiencia que tengas, OpenMarketers es para tí."
                      }
                    </p>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"testimonial"}
              data-plasmic-override={overrides.testimonial}
              hasGap={true}
              className={classNames(projectcss.all, sty.testimonial)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mWwJy)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"leftColumTestimonial"}
                  data-plasmic-override={overrides.leftColumTestimonial}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.leftColumTestimonial
                  )}
                >
                  <h4
                    data-plasmic-name={"h4"}
                    data-plasmic-override={overrides.h4}
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"¿Qué opinan nuestros\n"}
                        </React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__qDi5G
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "tablet")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "laptopL")
                              ? "alumnos?"
                              : "alumnos?"}
                          </span>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    ) : hasVariant(globalVariants, "screen", "tablet") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"¿Qué opinan nuestros\n"}
                        </React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__coCd
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "tablet")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "laptopL")
                              ? "alumnos?"
                              : "alumnos?"}
                          </span>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    ) : hasVariant(globalVariants, "screen", "laptopM") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"¿Qué opinan nuestros\n"}
                        </React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span___7Xywu
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "tablet")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "laptopL")
                              ? "alumnos?"
                              : "alumnos?"}
                          </span>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    ) : hasVariant(globalVariants, "screen", "laptopL") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"¿Qué opinan nuestros\n"}
                        </React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__kDouX
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "tablet")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "laptopL")
                              ? "alumnos?"
                              : "alumnos?"}
                          </span>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <React.Fragment>
                          {"¿Qué opinan nuestros\n"}
                        </React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__fd6T
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "tablet")
                              ? "alumnos?"
                              : hasVariant(globalVariants, "screen", "laptopL")
                              ? "alumnos?"
                              : "alumnos?"}
                          </span>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    )}
                  </h4>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jhEyt)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__wgu61
                          )}
                          previousNextPage={["previousPageLastChild"]}
                        />
                      ),

                      value: args.leftArrow
                    })}

                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__dk9Qd
                          )}
                          previousNextPage={["nextPage"]}
                        />
                      ),

                      value: args.rightArrow
                    })}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"rightColumnTestimonial"}
                  data-plasmic-override={overrides.rightColumnTestimonial}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.rightColumnTestimonial
                  )}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cNmz0)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <TestimonialsTexts
                          className={classNames(
                            "__wab_instance",
                            sty.testimonialsTexts__hOcro
                          )}
                          testimonio={
                            <p
                              className={classNames(
                                projectcss.all,
                                projectcss.p,
                                projectcss.__wab_text,
                                sty.p__mCcOp
                              )}
                            >
                              {"Testimonio"}
                            </p>
                          }
                          titulo={"Título"}
                        />
                      ),

                      value: args.testimonialsText
                    })}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__f7RUi)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <React.Fragment>
                          <ProfileImage
                            active={true}
                            className={classNames(
                              "__wab_instance",
                              sty.profileImage__aRwTw
                            )}
                          />

                          <ProfileImage
                            className={classNames(
                              "__wab_instance",
                              sty.profileImage__ja4Jz
                            )}
                          />

                          <ProfileImage
                            className={classNames(
                              "__wab_instance",
                              sty.profileImage___3HqFp
                            )}
                          />

                          <ProfileImage
                            className={classNames(
                              "__wab_instance",
                              sty.profileImage__mOr48
                            )}
                          />
                        </React.Fragment>
                      ),
                      value: args.testimonialUsers
                    })}
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <p.Stack
            as={"div"}
            data-plasmic-name={"modulesSection"}
            data-plasmic-override={overrides.modulesSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.modulesSection)}
            id={"modulos" as const}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"sectionContainer"}
              data-plasmic-override={overrides.sectionContainer}
              hasGap={true}
              className={classNames(projectcss.all, sty.sectionContainer)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"sectionHeading"}
                data-plasmic-override={overrides.sectionHeading}
                hasGap={true}
                className={classNames(projectcss.all, sty.sectionHeading)}
              >
                <h3
                  data-plasmic-name={"sectionTitle"}
                  data-plasmic-override={overrides.sectionTitle}
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.sectionTitle
                  )}
                >
                  {"Módulos"}
                </h3>

                <p
                  data-plasmic-name={"description"}
                  data-plasmic-override={overrides.description}
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.description
                  )}
                >
                  {hasVariant(globalVariants, "screen", "tablet")
                    ? "OpenMarketers cuenta con una amplia oferta formativa que te permitirá formarte en las últimas tecnologías que el mercado laboral demanda."
                    : "OpenMarketers cuenta con una amplia oferta formativa que te permitirá formarte en las últimas tecnologías que \nel mercado laboral demanda."}
                </p>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__enboa)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <React.Fragment>
                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__btXe8
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hYzZe
                            )}
                          >
                            {"3h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__caG7P)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/86933e17adf4ee295034d790d091f5e1.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Introducción Marketing Digital"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__bQsk6
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4UxxJ
                            )}
                          >
                            {"8h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__hEidd)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/7ae52e8a0122b4b9660195c8f06e7d3e.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Estrategia de Marketing Digital"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard___0OxRg
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fwVph
                            )}
                          >
                            {"5h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__lT9Ov)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/16040d660cbe1cdfa0e2355dfc009d3a.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Metodología ACE y Plan de Marketing"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard___3JZwe
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aCukh
                            )}
                          >
                            {"6h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__ffU6M)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/847daff1be9ebfd66d62f0e7c9f534d4.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ex8UO
                            )}
                          >
                            {"Metodologías Ágiles aplicadas a Marketing"}
                          </div>
                        }
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__p7Mxn
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__p01S
                            )}
                          >
                            {"3h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__aOyw7)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/cc7a3c6b19b1c459e6be3a46c3144e00.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kUsjg
                            )}
                          >
                            {"Legislación y Marketing Digital"}
                          </div>
                        }
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__oYp0J
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nw9U
                            )}
                          >
                            {"14h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__e8WGx)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/886441c6fe045df8bb83616b9dc83a7e.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={
                          "Neuromarketing aplicado a producto y Marketing Digital"
                        }
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__aft3G
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3DMt3
                            )}
                          >
                            {"6h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___09Wa)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/e32211afbb47b7ccf398e63c78466fcf.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lQlYe
                            )}
                          >
                            {"Branding Digital"}
                          </div>
                        }
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard___7SKOl
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mfPlQ
                            )}
                          >
                            {"6h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__ntPjT)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/cc197f4f06f2f8e2d408519288909214.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Growth Marketing"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__gZxkL
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mOyQa
                            )}
                          >
                            {"10h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__oa9OS)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/40c7e49d6737dbabc8c39c9ad3d3506e.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Curso HTML y CSS para Marketinianos"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__xy3Zh
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lj5WF
                            )}
                          >
                            {"10h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___9I5D5)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/b319eea175faf565591c7c41f7e4c2b4.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Redes Sociales - Iniciación"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard__uySg
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__t2Uf1
                            )}
                          >
                            {"4h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__qwrT7)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/b319eea175faf565591c7c41f7e4c2b4.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"Redes Sociales - Avanzado"}
                      />

                      <ModuleItemCard
                        className={classNames(
                          "__wab_instance",
                          sty.moduleItemCard___9No7G
                        )}
                        detailsTitle={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eRvRo
                            )}
                          >
                            {"6h"}
                          </div>
                        }
                        moduleIcon={
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__yaSS)}
                            displayHeight={"80px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"80px" as const}
                            loader={"plasmic"}
                            loading={"lazy" as const}
                            src={{
                              src: "https://site-assets.plasmic.app/e26944c8165da4a341a973b833d63f87.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        }
                        titulo={"SEO I - Iniciación"}
                      />
                    </React.Fragment>
                  ),
                  value: args.courseList
                })}
              </div>
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"faq"}
            data-plasmic-override={overrides.faq}
            className={classNames(projectcss.all, sty.faq)}
          >
            <div
              data-plasmic-name={"faqContent"}
              data-plasmic-override={overrides.faqContent}
              className={classNames(projectcss.all, sty.faqContent)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <CourseLandingFaq
                    className={classNames(
                      "__wab_instance",
                      sty.courseLandingFaq__lExI
                    )}
                    subtitle={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gTfg
                        )}
                      >
                        {"Resolvamos tus dudas"}
                      </div>
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pgF2Z
                        )}
                      >
                        {"¿Tienes dudas sobre OpenMarketers?"}
                      </div>
                    }
                  />
                ),

                value: args.faq
              })}
            </div>
          </div>

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
            footerLinks={
              <React.Fragment>
                <Button
                  className={classNames("__wab_instance", sty.button__t16L4)}
                  color={"navLink" as const}
                  link={"/politica-cookies" as const}
                  size={"small" as const}
                >
                  {"Política de cookies"}
                </Button>

                <Button
                  className={classNames("__wab_instance", sty.button__xuTdg)}
                  color={"navLink" as const}
                  link={"/politica-privacidad" as const}
                  size={"small" as const}
                >
                  {"Política de Privacidad"}
                </Button>

                <Button
                  className={classNames("__wab_instance", sty.button__mjiPo)}
                  color={"navLink" as const}
                  link={"/terminos-condiciones" as const}
                  size={"small" as const}
                >
                  {"Términos y Condiciones"}
                </Button>
              </React.Fragment>
            }
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "content",
    "header",
    "breadCrumb",
    "h1",
    "heroFeature1",
    "heroFeature2",
    "heroFeature3",
    "content5",
    "rightColumn",
    "rectangle699",
    "courseIcon",
    "omFeatures",
    "heading2",
    "sectionTitle5",
    "description4",
    "content2",
    "content3",
    "content4",
    "courseSection",
    "omProcess",
    "heading",
    "sectionTitle4",
    "omEspecial",
    "textContent01",
    "sectionTitle2",
    "description2",
    "omEspecial2",
    "frame1000002027",
    "sectionTitle3",
    "description3",
    "omEspecial3",
    "frame1000002028",
    "sectionTitle6",
    "description5",
    "testimonial",
    "leftColumTestimonial",
    "h4",
    "rightColumnTestimonial",
    "modulesSection",
    "sectionContainer",
    "sectionHeading",
    "sectionTitle",
    "description",
    "faq",
    "faqContent",
    "footerSection"
  ],
  headerHeroSection: [
    "headerHeroSection",
    "content",
    "header",
    "breadCrumb",
    "h1",
    "heroFeature1",
    "heroFeature2",
    "heroFeature3",
    "content5",
    "rightColumn",
    "rectangle699",
    "courseIcon"
  ],
  content: [
    "content",
    "header",
    "breadCrumb",
    "h1",
    "heroFeature1",
    "heroFeature2",
    "heroFeature3"
  ],
  header: ["header", "breadCrumb", "h1"],
  breadCrumb: ["breadCrumb"],
  h1: ["h1"],
  heroFeature1: ["heroFeature1"],
  heroFeature2: ["heroFeature2"],
  heroFeature3: ["heroFeature3"],
  content5: ["content5", "rightColumn", "rectangle699", "courseIcon"],
  rightColumn: ["rightColumn", "rectangle699", "courseIcon"],
  rectangle699: ["rectangle699", "courseIcon"],
  courseIcon: ["courseIcon"],
  omFeatures: [
    "omFeatures",
    "heading2",
    "sectionTitle5",
    "description4",
    "content2",
    "content3",
    "content4"
  ],
  heading2: ["heading2", "sectionTitle5", "description4"],
  sectionTitle5: ["sectionTitle5"],
  description4: ["description4"],
  content2: ["content2"],
  content3: ["content3"],
  content4: ["content4"],
  courseSection: ["courseSection"],
  omProcess: [
    "omProcess",
    "heading",
    "sectionTitle4",
    "omEspecial",
    "textContent01",
    "sectionTitle2",
    "description2",
    "omEspecial2",
    "frame1000002027",
    "sectionTitle3",
    "description3",
    "omEspecial3",
    "frame1000002028",
    "sectionTitle6",
    "description5"
  ],
  heading: ["heading", "sectionTitle4"],
  sectionTitle4: ["sectionTitle4"],
  omEspecial: ["omEspecial", "textContent01", "sectionTitle2", "description2"],
  textContent01: ["textContent01", "sectionTitle2", "description2"],
  sectionTitle2: ["sectionTitle2"],
  description2: ["description2"],
  omEspecial2: [
    "omEspecial2",
    "frame1000002027",
    "sectionTitle3",
    "description3"
  ],
  frame1000002027: ["frame1000002027", "sectionTitle3", "description3"],
  sectionTitle3: ["sectionTitle3"],
  description3: ["description3"],
  omEspecial3: [
    "omEspecial3",
    "frame1000002028",
    "sectionTitle6",
    "description5"
  ],
  frame1000002028: ["frame1000002028", "sectionTitle6", "description5"],
  sectionTitle6: ["sectionTitle6"],
  description5: ["description5"],
  testimonial: [
    "testimonial",
    "leftColumTestimonial",
    "h4",
    "rightColumnTestimonial"
  ],
  leftColumTestimonial: ["leftColumTestimonial", "h4"],
  h4: ["h4"],
  rightColumnTestimonial: ["rightColumnTestimonial"],
  modulesSection: [
    "modulesSection",
    "sectionContainer",
    "sectionHeading",
    "sectionTitle",
    "description"
  ],
  sectionContainer: [
    "sectionContainer",
    "sectionHeading",
    "sectionTitle",
    "description"
  ],
  sectionHeading: ["sectionHeading", "sectionTitle", "description"],
  sectionTitle: ["sectionTitle"],
  description: ["description"],
  faq: ["faq", "faqContent"],
  faqContent: ["faqContent"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  content: "div";
  header: "div";
  breadCrumb: "div";
  h1: "h1";
  heroFeature1: "div";
  heroFeature2: "div";
  heroFeature3: "div";
  content5: "div";
  rightColumn: "div";
  rectangle699: "div";
  courseIcon: "div";
  omFeatures: "div";
  heading2: "div";
  sectionTitle5: "h2";
  description4: "p";
  content2: "div";
  content3: "div";
  content4: "div";
  courseSection: "div";
  omProcess: "div";
  heading: "div";
  sectionTitle4: "h2";
  omEspecial: "div";
  textContent01: "div";
  sectionTitle2: "h5";
  description2: "p";
  omEspecial2: "div";
  frame1000002027: "div";
  sectionTitle3: "h5";
  description3: "p";
  omEspecial3: "div";
  frame1000002028: "div";
  sectionTitle6: "div";
  description5: "p";
  testimonial: "div";
  leftColumTestimonial: "div";
  h4: "h4";
  rightColumnTestimonial: "div";
  modulesSection: "div";
  sectionContainer: "div";
  sectionHeading: "div";
  sectionTitle: "h3";
  description: "p";
  faq: "div";
  faqContent: "div";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingCurso__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingCurso__VariantsArgs;
    args?: PlasmicLandingCurso__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingCurso__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingCurso__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicLandingCurso__ArgProps,
          internalVariantPropNames: PlasmicLandingCurso__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicLandingCurso__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingCurso";
  } else {
    func.displayName = `PlasmicLandingCurso.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingCurso = Object.assign(
  // Top-level PlasmicLandingCurso renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    content: makeNodeComponent("content"),
    header: makeNodeComponent("header"),
    breadCrumb: makeNodeComponent("breadCrumb"),
    h1: makeNodeComponent("h1"),
    heroFeature1: makeNodeComponent("heroFeature1"),
    heroFeature2: makeNodeComponent("heroFeature2"),
    heroFeature3: makeNodeComponent("heroFeature3"),
    content5: makeNodeComponent("content5"),
    rightColumn: makeNodeComponent("rightColumn"),
    rectangle699: makeNodeComponent("rectangle699"),
    courseIcon: makeNodeComponent("courseIcon"),
    omFeatures: makeNodeComponent("omFeatures"),
    heading2: makeNodeComponent("heading2"),
    sectionTitle5: makeNodeComponent("sectionTitle5"),
    description4: makeNodeComponent("description4"),
    content2: makeNodeComponent("content2"),
    content3: makeNodeComponent("content3"),
    content4: makeNodeComponent("content4"),
    courseSection: makeNodeComponent("courseSection"),
    omProcess: makeNodeComponent("omProcess"),
    heading: makeNodeComponent("heading"),
    sectionTitle4: makeNodeComponent("sectionTitle4"),
    omEspecial: makeNodeComponent("omEspecial"),
    textContent01: makeNodeComponent("textContent01"),
    sectionTitle2: makeNodeComponent("sectionTitle2"),
    description2: makeNodeComponent("description2"),
    omEspecial2: makeNodeComponent("omEspecial2"),
    frame1000002027: makeNodeComponent("frame1000002027"),
    sectionTitle3: makeNodeComponent("sectionTitle3"),
    description3: makeNodeComponent("description3"),
    omEspecial3: makeNodeComponent("omEspecial3"),
    frame1000002028: makeNodeComponent("frame1000002028"),
    sectionTitle6: makeNodeComponent("sectionTitle6"),
    description5: makeNodeComponent("description5"),
    testimonial: makeNodeComponent("testimonial"),
    leftColumTestimonial: makeNodeComponent("leftColumTestimonial"),
    h4: makeNodeComponent("h4"),
    rightColumnTestimonial: makeNodeComponent("rightColumnTestimonial"),
    modulesSection: makeNodeComponent("modulesSection"),
    sectionContainer: makeNodeComponent("sectionContainer"),
    sectionHeading: makeNodeComponent("sectionHeading"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    description: makeNodeComponent("description"),
    faq: makeNodeComponent("faq"),
    faqContent: makeNodeComponent("faqContent"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicLandingCurso
    internalVariantProps: PlasmicLandingCurso__VariantProps,
    internalArgProps: PlasmicLandingCurso__ArgProps
  }
);

export default PlasmicLandingCurso;
/* prettier-ignore-end */
